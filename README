This project involves development of a FAT32 filesystem for small microcontrollers.
This will be originally developed for the MDK OS to read FAT32 filesytem.

Development of this project will be done outside of any tree and debugging will be
done using the standard libraries. To integrate this project into an existing 
microcontroller project appropriate changes has to be done for the microcontroller/microprocessor
environment.



Understanding of the FAT Filesystem.
===================================
MBR: Master boot record.
The Master boot record is 512 bytes. The master boot record ends with the 
signature 0x55 0xAA.
The 64 bytes behind the signature contains the start of the partition table
entry. There are 4 partition table entries each of 16 bytes.

The following diagram explains this:

Master Boot Record:
    +-------------------+ 
    |                   |
    |                   |
    |                   |
    |                   |
    | Boot code of 446  |
    |           bytes   |
    |                   |
    |                   |
    |                   |
    |                   |
    |                   |
    |                   |
    |                   |
    |          _________|
    |_________|_________|
    |P1_______|_________|
    |P2_______|_________|
    |P3_______|_________|
    |P4       |0x55 0xAA|
    +-------------------+

P1,P2,P3 and P4 contains the partition table of 16 bytes each.

Observations with the partition scheme
--------------------------------------

I am seeing multiple boot signature 0x55 0xAA (at least 3) with the 
MBR partition data entry being empty. Why?

If you take a peek at the create_testfs_image shell script you will find that 
I am creating a image without any partitions. The image is just one big filesystem.
Hence there are no partition data present.

In the case of multiple boot signatures please see Microsoft FAT32 specifications Pg22.
In it you will find that the Microsoft FAT32 "boot sector" is actually three 512-byte sectors
long. Also there is a copy of all these sectors starting at the BPB_BkBootSec sector. The 
BPB_BkBootSec is the backup boot sector. This is a feature of the FAT32 filesystem. The
idea behind this is if sector 0 is overwritten or corrupted by some means the whole filesystem
cannot be read making it a single point of failure. To prevent this a backup copy of the 
boot sector information is kept at BPB_BkBootSec which is usually 6 and some of the systems are
"hardwired" to read sector 6.

